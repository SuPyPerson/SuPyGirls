.. Flying Circus documentation master file, created by
   sphinx-quickstart on Sat Apr 30 09:13:18 2016.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.


**Bem Vindos ao Tutorial SuPyGirls Connection**
===============================================

Bora programar!

Bem vindos ao SuPyGirls, hoje nós vamos começar a nos aventurar pelo incrível mundo do desenvolvimento de Jogos.


.. image:: _static/giphy1.gif

A plataforma SuperPython é um ambiente de desenvolvimento online de Jogos em python que você pode acessar de qualquer lugar através da Internet. Nela você vai encontrar algumas ferramentas pensadas para te ajudar a aprender a programar enquanto constrói jogos. Esse tutorial vai focar no uso da ferramenta Vittolino para a construção de histórias em quadrinhos.


.. image:: _static/giphy2.gif

Primeiro, devemos acessar o endereço da plataforma SupyGirls do SuperPython, que é esse aqui ó:

http://supygirls.pythonanywhere.com/supygirls

O que deve te levar direto pra cá:

.. image:: _static/captela1.png

Cada quadrado nomeado nesse portal é uma sala para uma turma de desenvolvimento de jogos. Você deve entrar na sala da sua turma que seu professor ou professora indicar (se ele tiver enrolando, pede pra ele dizer logo qual é, nós queremos programar!). Mas o que será que todos esses nomes tem em comum?

.. image:: _static/fun1.png
(pausa reflexiva)

Na sala da sua turma, existem mais quadrados nomeados. Cada quadrado nomeado é um editor de jogos, ou seja, se você clicar em qualquer um deles você vai ser levado para um ambiente onde já vai poder começar a contruir com todas as doideiras que se passam dentro da sua cabeça perturbada!

.. image:: _static/captela2.png

Mais nomes... suspeito...

.. image:: _static/giphy3.gif

Enfim, de volta ao que importa, JOGOS!

.. image:: _static/giphy4.gif

Vittolino - Conte Estórias
==========================

Pronto, finalmente chegamos ao editor. Essa é a tela de início. Nela você pode observar no canto superior esquerdo o nome do projeto, o nome da Sala da sua turma e o nome do editor que você escolheu. Para continuarmos, precisaremos escolher a opção Edit.

.. image:: _static/captela3.png

Agora chegamos ao editor do código Python. Esse código é como você vai descrever tudo o que o computador precisa fazer para ele construir o jogo que você imaginar. No momento, ele só tem uma linha. Essa linha começa com o caracter '#', o que significa que ela não será lida pelo computador, ela é um comentário feito para os seres humanos lerem. Eles servem para facilitar a leitura do código pelo programador.

Especificamente, essa linha é apenas uma marcação do título do documento de texto que nós vamos editar. Mas se você ficou confuso, não se preocupe, porque nós vamos apagá-la!


.. image:: _static/captela4.png

Agora, na primeira linha, nós vamos escrever o seguinte código:

from _spy.vittolino.main import Cena, Elemento, Texto

.. image:: _static/captela5.png

Que doido, o editor coloriu automaticamente algumas palavras para nós, o que isso deve significar:
from _spy.vittolino.main import Cena, Elemento, Texto

A Arquitetura do Vittolino
==========================

.. image:: _static/captela6.png


Agora é uma boa hora pra explicar como o vittolino funciona. Vamos analisar essa frase que nós acabamos de inserir no nosso código. Não se preocupe se não entender essas coisas agora, programar é do tipo de coisa que se aprende fazendo!

from
Palavra em inglês que significa "de". ex.: Ele veio de dentro do oceano congelado da lua de Júpiter!

import
Palavra em inglês que significa "importar". ex.: Mês passado eu importei 3 cangurus Uzbequistaneses!

Ou seja, de _spy.vittolino.main importar Cena, Elemento, Texto

A história em quadrinhos que vamos construir com o Vittolino é estrturada da seguinte maneira:

.. image:: _static/fun2.jpg

Cada quadro é uma Cena, que possui Elementos que, por sua vez, possuem um Texto. Sabendo disso, o que a nossa primeira linha de código deve pedir para o computador fazer?

.. image:: _static/giphy5.gif

Dentro do Vittolino, para construirmos algo que tem uma imagem (uma Cena ou um Elemento), precisamos que esta imagem esteja na Internet. Isso acontece porque quando formos pedir pro computador construir uma dessas coisas, a gente deverá dar para ele um link de uma imagem.

Agora é o momento de criar!

.. image:: _static/giphy6.gif

Antes de começarmos a implementar o jogo, precisamos pensar em qual história iremos contar! Busque na internet uma imagem de um cenário e uma imagem de um personagem para entrar no primeiro quadro de sua história. Se quiser já planejar toda a história e ir buscando as imagens, façam! Só não se esqueça de salvar e identificar os links que for encontrando.

Para o nosso exemplo, nós escolhemos os seguintes links:

Cena (Imagem de um Castelo)

https://img.elo7.com.br/product/original/1AD3471/painel-1x0-70-salao-de-festa-salao-de-festa.jpg

Elemento (Imagem de uma Barbie)

http://www.scrapsdinamicos.com.br/imagens/imagens-imagens-da-barbie-20.png

Para copiar o link de uma imagem, clique com o botão direito nela e escolha a opção "Copiar Endereço da Imagem", mas atenção! Existe a possibilidade de uma imagem que você queira pegar esteja com seu endereço protegido, por isso é sempre bom testar os links que vocês selecionarem. Perceba que se você clicar em alguns dos links acima, você é redirecionado para uma página que possui apenas a imagem e nada mais.

Nós podemos ir salvando os links no próprio código ou no bloco de notas. Se você escolher salvar no pŕoprio código, você tem duas opções:

Salvar em um comentário. Utilize o '#' no começo de uma linha e escreva sua anotação depois.
Salvar numa variável. Escolha um nome sem espaços e único e escreva nome = "link". O link deve estar entre aspas.


.. image:: _static/captela7.png

Se você tem uma alma mais desenhista e quer criar os personagens e os cenários, também pode! Desenhe no computador ou tire fotos de algum desenho à mão e faça o upload do arquivo para um site de hosting de imagens, existem vários na Internet. Depois é só salvar os links onde suas imagens foram guardadas.

Também é o momento de se pensar nas falas de cada personagem em cada cena!

.. image:: _static/giphy7.gif

Para nosso exemplo, nós escolhemos o seginte Texto para a Barbie no Castelo:

"Vim para o castelo para me abrigar de um ataque de dragões."

Não esqueça de anotar em algum lugar, no bloco de notas, no código (da mesma maneira dos links) ou no próprio papel.

Pronto! Agora que temos o primeiro quadro planejado e preparado, podemos começar a implementar em código.

Implementação do Primeiro Quadro
================================

Agora precisamos pedir ao computador duas coisas para o nosso Jogo começar a andar. Primeiro, precisamos pedir pra ele anotar como construir a nossa história, e depois que contarmos pra ele, devemos pedir pra que ele realize a construção da nossa história.


.. image:: _static/captela8.png

CALMA

.. image:: _static/giphy8.gif

Para contar para o computador como fazer algo, nós usamos a palavra-chave def. Ela significa definir, ou seja, você está definindo algo novo para o computador, algo que ele não sabia. Mas para usar essa palavra da seguinte maneira:

def NomeDaquiloQueVoceVaiEnsiarSemEspacosNemAcento():

Logo após essa instrução, nós escrevemos todas as instruções daquilo que estamos ensinando ao computador de maneira indentada. A indentação é um tipo de espaço especial que diz para o computador que as instruções indentadas em sequência fazem parte daquilo que você quer ensinar a ele.

.. image:: _static/captela9.png

mais uma vez, agora com mais calma.

Agora precisamos dizer para o computador, como construir a Historia. Primeiro vamos precisar de uma Cena.

Nossa primeira Cena é o Castelo, mas não é porque nós salvamos o link no código que o computador sabe que essa é a nossa intenção. Nós precisamos dizer de maneira clara pra ele. Então a primeira instrução de como construir nossa história vai ser:

nomeCena = Cena(img = "link")

No caso do nosso exemplo:

.. image:: _static/captela10.png

Não se esqueçam de fechar as aspas e os parenteses! Agora falta muito pouco pra podermos fazer o nosso primeiro teste. Uma vez que já contamos que existe uma cena na nossa história, temos que falar pra cena "rodar", fazemos isso através da função .vai() da própria cena. Nós escrevemos:

nomeCena.vai()

No caso do nosso exemplo:

.. image:: _static/captela11.png

Agora vamos para o nosso primeiro teste! Procure o botão no canto direito superior escrito "Run" e reze para tudo dar certo!

.. image:: _static/captela12.png

RUFEM OS TAMBORES
.
.
.
.

.. image:: _static/captela13.png

ERROR


.. image:: _static/giphy9.gif

Tivemos um erro, nosso teste falhou. Alguma coisa em algum lugar deu errado. Algo de errado não está certo. Programar é uma constante batalha com os erros que assombram o mais astuto de todos os programadores. O computador não pensa por nós, então qualquer erro, por menor que seja, tem o potencial de fazer nosso programa parar de funcionar.

"Mas o que eu faço?!", vocês podem perguntar.

Chequem tudo. Cheque se você usou as letras maiúsculas certas, se fechou todos os parênteses, se escreveu tudo certinho, se esqueceu ou não usou aspas, qualquer coisa pode ter acontecido. A mensagem em vermelho te dá uma dica do que pode ter acontecido no seu código. Muitas vezes ela diz precisamente onde o seu erro aconteceu, mas muitas vezes ela mais atrapalha do que ajuda. Nessas horas é bom pedir ajuda pro colega ao lado ou na Internet para tentar descobrir qual o seu erro. Sabe quando a gente tá procurando alguma coisa em casa e vem alguém e simplesmente acha? Na programação, também acontece. Às vezes.

É Vitollino, não Vittolino!
===========================

Achei o meu erro!!

Eu vinha escrevendo Vitollino errado desde o começo, inclusive aqui nesse tutorial. Eu estava escrevendo com dois t's ao invés de dois l's. Erros pequenos como esses podem custar horas, se não dias de dor de cabeça, por isso, preste mais atenção que eu ao programar! Vamos consertar o código e ver se agora funciona.

.. image:: _static/captela14.png

.. image:: _static/giphy10.gif

AGORA VAI!

.. image:: _static/captela15.png

.. image:: _static/giphy11.gif

FOOOOOOOOOOOOO951OOOOOOOIIIII!!!!!1!!!!!!!111
Existe uma sensação de alívio única de achar um erro que estava travando o seu código. Nossa Cena ainda não faz nada além de simplesmente aparecer, mas pra quem não tinha nem isso, acho digno de uma comemoração.

A próxima coisa que precisamos fazer é introduzir o personagem, faremos isso de maneira semelhante do que foi feito com a cena.

nomePersonagem = Elemento(img = "link", tit = "Titulo", style = dict (top = v1, left = v2, height = v3, width = v4))

Para introduzir a Cena, nós apenas precisávamos passar a imagem da Cena. O Elemento precisa de um pouco mais que isso, precisamos dizer qual é o título daquele elemento (opcional) e um tal de style. Style é a maneira do Vitollino descrever a altura, a largura, e a posição do Elemento em Cena. Substituímos cada um daqueles valores por algum que se adeque a nossa história.

No nosso exemplo, como tinhamos o link da Barbir numa variável, podemos dar o nome da variável ao invés do link entre aspas. O nosso exemplo  fica assim:

.. image:: _static/captela16.png

Não se preocupem! Nós podemos pular linha no meio da declaração de uma função() se isso ajudar a leitura.

Vamos testar mais uma vez para ver se está tudo em ordem.

.. image:: _static/captela17.png

ERRO DE NOVO!

.. image:: _static/fun3.png

Erro de Novo!! O que será que deu errado dessa vez?!

Ah, já achei... Será que você consegue achar o meu erro sem ler qual é? (Duvido, rs)









Praqueles que não acaharam, eu escrevi linkDaBaribie quando eu guardei o meu link, e na hora de escrever na construção do Elemento, eu escrevi linkDaBarbie certo. Uma letra fora aqui e ali e nada funciona mais. Vamos testar mais uma vez. Também vou aproveitar para trocar o link do Castelo por uma varável, para arrumar melhor o meu código.

.. image:: _static/captela18.png
.. image:: _static/captela19.png

Sem erros!

Não obtivemos nenhuma mensagem de erro dessa vez, mas a Barbie ainda não apareceu. Isso é porque assim como tinhamos que mandar a cena "rodar", temos que mandar o nosso personagem "entrar em cena". Nós fazemos isso através da função .entrar() do Elemento. Diferente da função .vai(), nós precisamos passar a Cena na qual o Elemento vai entrar na função .entrar().

nomePersonagem.entrar(nomeCena)

O nosso exemplo  fica assim:

.. image:: _static/captela20.png

.. image:: _static/captela21.png

Sucesso!

Agora só falta inserirmos o Texto para nossa primeira página ficar completa! E assim como antes, nós iremos introduzi-lo de maneira semelhante ao Elemento e ao Personagem:

nomeTexto = Texto(nomeCena, "texto")

Assim como o Elemento e Cena, não basta apenas contar para o computador que o Texto existe, temos que associa-lo a algum Elemento dentro da Cena que ele se encontra. Fazemos isso associando a função .vai() do Texto com a função .vai() do elemento que se deseja associar. Para se associar função, nós não escrevemos os parênteses:

nomeElemento.vai = nomeTexto.vai

No nosso exemplo, fica assim:

.. image:: _static/captela22.png

E agora o último teste da nossa primeira página!

.. image:: _static/captela23.png

Sem texto, mais um erro!

.. image:: _static/giphy12.gif

O erro que cometi agora foi a ordem da operação txtBarbie.vai = barbie.vai. Escrito dessa maneira, eu estou dizendo ao computador para fazer ação do texto da barbie ser igual a ação da barbie, que é nula. O que eu quero na verdade é justamente o oposto, que a barbie copie a ação do texto, logo deve ser, barbie.vai = txtBarbie.vai.

.. image:: _static/captela24.png

E agora sim, o último teste da nossa primeira página!

.. image:: _static/captela25.png

AEAEAEAEAEAEAEAEAEAEAE

.. image:: _static/giphy13.gif
